# Declarative file for Kubernetes
# https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/deployment-v1/

# Creating deployment obj imperative way
# kubectl create deployment kub-example --image=aixufey/kub-example

apiVersion: apps/v1
kind: Deployment
metadata:
    name: kub-example-second
spec:
    replicas: 3
    # Tagged pod will be observed
    selector:
        # matchLabels:
        #     app: second-app
        #     tier: backend

        # Using regex - https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/label-selector/#LabelSelector
        # operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
        matchExpressions:
            - {
                  key: app,
                  operator: In,
                  values: [first-app, second-app, whats-app],
              }
    # Pod
    template:
        # kind: Pod - Deployment is always Pod kind
        metadata:
            # Pod label to be watched by Deployment
            labels:
                # K/V name can be anything
                app: second-app
                tier: backend
        spec:
            containers:
                - name: second-node
                  image: aixufey/kub-example
                  # Always pull from latest tag
                  imagePullPolicy: Always

                  # - name:
                  #       image: ... ...

                  # The path can be mapped to a route to check for health if Pod has been crashed
                  livenessProbe:
                      httpGet:
                          path: /
                          port: 8080
                      periodSeconds: 10
                      initialDelaySeconds: 5
